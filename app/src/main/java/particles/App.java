/*
 * This Java source file was generated by the Gradle 'init' task.
 * Particles with JavaFX
 * Source: https://www.youtube.com/watch?v=db8h1gDgt6M (20.11.2021)
 */
package particles;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javafx.animation.AnimationTimer;
import javafx.application.Application;
import javafx.geometry.Point2D;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.Label;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;

public class App extends Application {

    private GraphicsContext g;
    private final double SCENEWIDTH = 1280.0;
    private final double SCENEHEIGHT = 720.0;
    private final int STEPSIZE = 10;

    private double mouseX;
    private double mouseY;

    private List<Particle> particles = new ArrayList<>();

    Label lbl = new Label("Particles: 0");

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage stage) throws Exception {
        var scene = new Scene(createContent());
        scene.setOnMouseMoved(e -> {
            mouseX = e.getX();
            mouseY = e.getY();
        });

        stage.setScene(scene);
        stage.setTitle("JavaFX");
        stage.show();
    }

    private Parent createContent() {

        for (int y = STEPSIZE; y < SCENEHEIGHT; y += STEPSIZE) {
            for (int x = STEPSIZE; x < SCENEWIDTH; x += STEPSIZE) {
                particles.add(new Particle(x, y, Color.RED));
            }
        }

        Pane pane = new Pane();
        pane.getChildren().add(lbl);
        pane.setPrefSize(SCENEWIDTH, SCENEHEIGHT);

        var canvas = new Canvas(SCENEWIDTH, SCENEHEIGHT);
        g = canvas.getGraphicsContext2D();

        AnimationTimer timer = new AnimationTimer() {
            public void handle(long now) {
                onUpdate();
            }
        };
        timer.start();

        pane.getChildren().add(canvas);
        return pane;
    }

    protected void onUpdate() {
        g.clearRect(0,0,SCENEWIDTH, SCENEHEIGHT);
        lbl.setText("Particles: " + particles.size());
        particles.forEach(p -> {
            // consider passing the location as raw doubles. Using a Point2D object
            // creates an insane amount of short lived objects. This could have an
            // impact on performance.
            p.update(new Point2D(mouseX, mouseY));
            g.setFill(p.color);
            g.fillOval(p.x-1, p.y-1, 2, 2);
        });

        cleanUp();
    }

    // Particles close to the mouse position are assumed to be "sucked in" 
    // and disappear. We remove them from the list.
    private void cleanUp() {
        Iterator<Particle> partIt = particles.iterator();
        while(partIt.hasNext()) {
            if (partIt.next().canBeRemoved()) {
                partIt.remove();
            }
        }
    }
}

